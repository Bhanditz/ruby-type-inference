Метод createTypeByCallAndArgs либо должен быть nullable, либо нужно переписать код в точке использования. Сейчас createTypeByCallAndArgs с аннотацией @Nullable переопределяет тот же метод с аннотацией @NotNull.
>

Напоминание, что пример qwe.baz, где baz - неопределенный метод, сейчас не перехватывается.
>

Теперь я сохраняю не только информацию о типах вызова, но и об аргументах метода в целом (имена и "типы"). Со стороны руби приходится тратить на это дополнительное время + информация в БД дублируется. Возможно стоит вынести method_name-receiver_name-info_args в отдельную таблицу, а вызовы с конкретным набором аргументов в другую.
> Обсудили - не стоит.

Вообще говоря, для типов аргументов и информации о параметрах тоже неплохо было бы сделать отдельные таблицы.
> Обсудили - не нужно.

На данный момент key-параметры не поддерживаются. Они не являются инстансом RExpression, так что их нужно обрабатывать по-особому.
> Исправил.

Методы getRubyArgTypeRepresentation и getArgTypeByRubyRepresentation, которые сейчас объявлены в классе SqliteRSignatureCacheManager, отлично смотрелись бы где-нибудь в RSignatureUtil, если бы я его не переименовал в фабрику. А так они только захламляют нормальный класс.
>

Синтетически создаваемые методы имеют Visibility.PUBLIC, что плохо. С руби вроде можно передавать ещё и информацию о модификаторе доступа метода. Сейчас мы сохраняем только public и protected ruby-методы.
> Обсудили, в руби буду запоминать только public методы.
> Не получится. Методы, объявляемые вне какого либо класса, как оказалось, являются private методами Object-а. Их нам нужно запоминать.